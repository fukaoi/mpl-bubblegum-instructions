/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet';
import { Creator, creatorBeet } from './Creator';
export type UpdateArgs = {
  name: beet.COption<string>;
  symbol: beet.COption<string>;
  uri: beet.COption<string>;
  creators: beet.COption<Creator[]>;
  sellerFeeBasisPoints: beet.COption<number>;
  primarySaleHappened: beet.COption<boolean>;
  isMutable: beet.COption<boolean>;
};

/**
 * @category userTypes
 * @category generated
 */
export const updateArgsBeet = new beet.FixableBeetArgsStruct<UpdateArgs>(
  [
    ['name', beet.coption(beet.utf8String)],
    ['symbol', beet.coption(beet.utf8String)],
    ['uri', beet.coption(beet.utf8String)],
    ['creators', beet.coption(beet.array(creatorBeet))],
    ['sellerFeeBasisPoints', beet.coption(beet.u16)],
    ['primarySaleHappened', beet.coption(beet.bool)],
    ['isMutable', beet.coption(beet.bool)],
  ],
  'UpdateArgs',
);
